name: CI

on:
  push:
    branches:
      - main
      - project_files
      - files_git
      - azure-pipeline

env:
  EPIC_GAMES_USERNAME: ${{ secrets.EPIC_GAMES_USERNAME }}
  EPIC_GAMES_PASSWORD: ${{ secrets.EPIC_GAMES_PASSWORD }}

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Install Epic Games Launcher
        run: |
          Invoke-WebRequest -Uri "https://launcher-public-service-prod06.ol.epicgames.com/launcher/api/installer/download/EpicGamesLauncherInstaller.msi?productName=unrealEngine" -OutFile "EpicGamesLauncherInstaller.msi"
          Start-Process -Wait -FilePath msiexec -ArgumentList '/i', 'EpicGamesLauncherInstaller.msi', '/quiet', '/qn', '/norestart'

      - name: Debug Environment
        run: |
          Write-Output "Current directory: $PWD"
          Write-Output "List contents: $(Get-ChildItem)"

      - name: Find Launcher Executable
        id: find_launcher
        run: |
          $launcherPath = Get-ChildItem -Path 'C:\Program Files (x86)' -Recurse -Filter 'EpicGamesLauncher.exe' -ErrorAction SilentlyContinue | Where-Object { $_.FullName -notlike '*Windows Defender*' } | Select-Object -ExpandProperty FullName
          if ($launcherPath -eq $null) {
            Write-Error "Epic Games Launcher not found."
          } else {
            echo "::set-output name=launcherPath::$launcherPath"
          }

      - name: Set Launcher Path
        id: set_launcher_path
        run: |
          $launcherPath = ${{ steps.find_launcher.outputs.launcherPath }}
          if (-not $launcherPath) {
            Write-Error "Epic Games Launcher not found. Exiting..."
            exit 1
          }
          $launcherDir = [System.IO.Path]::GetDirectoryName($launcherPath)
          Set-Location $launcherDir
          Write-Output "Launcher Path Set: $launcherPath"

      - name: Sign In to Epic Games Account
        run: |
          $launcherPath = ${{ steps.set_launcher_path.outputs.launcherPath }}
          try {
            Start-Process -Wait -FilePath ".\$($launcherPath -replace '.*\\')" -ArgumentList "login", "-username", "$env:EPIC_GAMES_USERNAME", "-password", "$env:EPIC_GAMES_PASSWORD" -Verb RunAs
          } catch {
            Write-Error "Failed to run Epic Games Launcher as administrator."
          }

      - name: Install Unreal Engine
        run: |
          Start-Process -Wait -FilePath "C:\Program Files (x86)\Epic Games\Launcher\Portal\Binaries\Win64\EpicGamesLauncher.exe" -ArgumentList '-run=UnrealEngine'

      - name: Build Unreal Engine Project
        run: |
          cd .\megascans_UE
          .\Engine\Build\BatchFiles\RunUAT.bat BuildCookRun -project=Project1.uproject -platform=Win64 -clientconfig=Development -serverconfig=Development -cook -allmaps -build -stage -pak -archive
